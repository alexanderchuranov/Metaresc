name: ci

on: [ push, pull_request ]

jobs:
  x86-ubuntu-gcc-clang:
    runs-on: ubuntu-latest
    name: x86 Ubuntu with
    strategy:
      matrix:
        include:
          - cc: gcc
          - cc: clang
    steps:
      - uses: actions/checkout@v4
      - name: update packages
        run: sudo apt-get update -y
      - name: install dependencies
        run: sudo apt-get install -y autoconf automake libtool pkg-config flex bison libxml2-dev libyaml-dev libtirpc-dev check valgrind python3
      - name: submodule update
        run: git submodule update --init --recursive --remote
      - name: autoconf/automake
        run: ./autogen.sh
      - name: configure
        run: ./configure CFLAGS="-I/usr/include/tirpc -Werror" LIBS=-ltirpc CC=${{matrix.cc}} || ( cat config.log ; false )
      - name: make check
        run: make check -j 2 || ( cat tests/test-suite.log ; false )
      - name: check with valgrind
        run: cd tests; CK_TIMEOUT_MULTIPLIER=2 make valgrind -j 2 || ( cat test-suite.log ; false )

  macos-clang:
    runs-on: macos-latest
    name: Macos with clang
    steps:
      - uses: actions/checkout@v4
      - name: install dependencies
        run: brew install autoconf automake libtool pkg-config flex bison libxml2 libyaml check python3
      - name: submodule update
        run: git submodule update --init --recursive --remote
      - name: autoconf/automake
        run: ./autogen.sh
      - name: configure
        run: ./configure CFLAGS=-Werror HAVE_BISON=yes YACC=$(brew --prefix)/opt/bison/bin/bison
      - name: make check
        run: make check -j 2 || ( cat tests/test-suite.log ; false )

  freebsd-clang:
    runs-on: ubuntu-latest
    name: FreeBSD with clang
    steps:
    - uses: actions/checkout@v4
    - name: Test in FreeBSD
      id: test
      uses: vmactions/freebsd-vm@v1
      with:
        usesh: true
        prepare: pkg install -y git autoconf automake libtool pkgconf flex bison libxml2 libyaml check python3	
        run: |
          git config --global --add safe.directory `pwd`
          git submodule update --init --recursive --remote
          ./autogen.sh
          ./configure CFLAGS="-I/usr/local/include/ -Werror" --without-perftest
          make check -j 2 || ( cat tests/test-suite.log ; false )

  windows:
    runs-on: windows-latest
    name: Windows with
    strategy:
      matrix:
        include:
          - { sys: mingw64, env: x86_64 }
          - { sys: mingw32, env: i686 }
          - { sys: ucrt64,  env: ucrt-x86_64 }
          - { sys: clang64, env: clang-x86_64 }	  
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v4
      - uses: msys2/setup-msys2@v2
        with:
          msystem: ${{matrix.sys}}
          update: true
          install: base-devel git autoconf automake libtool pkg-config flex bison python3 mingw-w64-${{matrix.env}}-check mingw-w64-${{matrix.env}}-libxml2 mingw-w64-${{matrix.env}}-libyaml mingw-w64-${{matrix.env}}-toolchain
      - name: submodule update
        run: git submodule update --init --recursive --remote
      - name: skip some tests due to 'out of memory' on mingw32
        if: ${{ matrix.sys == 'mingw32' }}
        run: |
          sed -i.bak -e "s/union //" -e "s/enum //" -e "s/pointer_int //" -e "s/double //" -e "s/float //" -e "s/mr_ptr //" -e "s/pointer_other //" -e "s/complex_float //" -e "s/complex_double //" -e "s/complex_long_double //" tests/Makefile.am
          sed -i.bak -e "s/MR_BUILTIN_TYPES/int/" tests/dw_mr_types.h
      - name: autoconf/automake
        run: ./autogen.sh
      - name: configure
        run: ./configure CFLAGS=-Werror --disable-static --enable-shared --without-perftest
      - name: patch libtool
        run: sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool
      - name: make check
        run: make check || ( cat tests/test-suite.log ; false )
      - name: archive build artifacts
        uses: actions/upload-artifact@v4
        with:
          name:	win-${{matrix.env}}-${{matrix.sys}}
          path: |
            src/.libs/libmetaresc.*
            src/.libs/mr_dwarf*
            src/metaresc.h
            src/mr_protos.h
            src/mr_export.h
            src/mr_pp.h
            tests/test-suite.log

  # non-x86-ubuntu-clang:
  #   runs-on: ubuntu-latest
  #   name: non-x86 Ubuntu with
  #   strategy:
  #     matrix:
  #       include:
  #         - { arch: aarch64, cc: gcc }
  #         - { arch: aarch64, cc: clang }
  #         - { arch: riscv64, cc: gcc }
  #         - { arch: riscv64, cc: clang }
  #         - { arch: ppc64le, cc: gcc }
  #         - { arch: ppc64le, cc: clang }
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: uraimo/run-on-arch-action@v2
  #       name: Run commands
  #       id: build-and-check
  #       with:
  #         arch: ${{matrix.arch}}
  #         distro: ubuntu_latest

  #         # Not required, but speeds up builds by storing container images in
  #         # a GitHub package registry.
  #         githubToken: ${{ github.token }}

  #         run: |
  #           apt-get update -y
  #           apt-get install -y git gcc clang make autoconf automake libtool pkg-config flex bison libxml2-dev libyaml-dev check python3
  #           git config --global --add safe.directory '*'
  #           git submodule update --init --recursive --remote
  #           ./autogen.sh
  #           ./configure CFLAGS="-I/usr/include/tirpc -Werror" LIBS=-ltirpc CC=${{matrix.cc}} --without-perftest
  #           make check || ( cat tests/test-suite.log ; false )

