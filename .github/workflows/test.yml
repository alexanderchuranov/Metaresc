name: ci

on: [ push, pull_request ]

jobs:
  x86-ubuntu-gcc-clang:
    runs-on: ubuntu-latest
    name: x86 Ubuntu with
    strategy:
      matrix:
        include:
          - cc: gcc
          - cc: clang
    steps:
      - uses: actions/checkout@v3
      - name: update packages
        run: sudo apt-get update -y
      - name: install dependencies
        run: sudo apt-get install -y autoconf automake libtool pkg-config flex bison libxml2-dev check valgrind python3
      - name: submodule update
        run: git submodule update --init --recursive --remote
      - name: autoconf/automake
        run: ./autogen.sh
      - name: configure
        run: ./configure CFLAGS=-I/usr/include/tirpc LIBS=-ltirpc CC=${{matrix.cc}}
      - name: make check
        run: make check -j 2
      - name: check with valgrind
        run: cd tests; make valgrind -j 2

  macos-clang:
    runs-on: macos-latest
    name: Macos with clang
    steps:
      - uses: actions/checkout@v3
      - name: install dependencies
        run: brew install autoconf automake libtool pkg-config flex bison libxml2 check python3
      - name: submodule update
        run: git submodule update --init --recursive --remote
      - name: autoconf/automake
        run: ./autogen.sh
      - name: configure
        run: ./configure HAVE_BISON=yes YACC=/usr/local/opt/bison/bin/bison --without-perftest
      - name: make check
        run: make check -j 2

  freebsd-clang:
    runs-on: macos-12
    name: FreeBSD with clang
    steps:
      - uses: actions/checkout@v3
      - name: FreeBSD VM
        uses: vmactions/freebsd-vm@v0
        with:
          usesh: true
          sync: rsync
          copyback: false
          prepare: pkg install -y git autoconf automake libtool pkgconf flex bison libxml2 check python3
          run: |
            git config --global --add safe.directory `pwd`
            git submodule update --init --recursive --remote
            ./autogen.sh
            ./configure LIBS=-lm --without-perftest
            make check -j 2

  windows-gcc:
    runs-on: windows-latest
    name: Windows with
    strategy:
      matrix:
        include:
          - { sys: mingw64, env: x86_64 }
          - { sys: mingw32, env: i686 }
          - { sys: ucrt64,  env: ucrt-x86_64 }
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v3
      - uses: msys2/setup-msys2@v2
        with:
          msystem: ${{matrix.sys}}
          update: true
          install: base-devel git autoconf automake libtool pkg-config flex bison python3 mingw-w64-${{matrix.env}}-check mingw-w64-${{matrix.env}}-toolchain
      - name: submodule update
        run: git submodule update --init --recursive --remote
      - name: autoconf/automake
        run: ./autogen.sh
      - name: configure
        run: ./configure --disable-static --enable-shared --without-perftest
      - name: patch libtool
        run: sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool
      - name: make check
        run: make check -j 2

  non-x86-ubuntu-clang:
    runs-on: ubuntu-latest
    name: non-x86 Ubuntu with
    strategy:
      matrix:
        include:
          - { arch: aarch64, cc: gcc }
          - { arch: aarch64, cc: clang }
          - { arch: riscv64, cc: gcc }
          - { arch: riscv64, cc: clang }
          - { arch: ppc64le, cc: gcc }
          - { arch: ppc64le, cc: clang }
    steps:
      - uses: actions/checkout@v3
      - uses: uraimo/run-on-arch-action@v2
        name: Run commands
        id: build-and-check
        with:
          arch: ${{matrix.arch}}
          distro: ubuntu_latest

          # Not required, but speeds up builds by storing container images in
          # a GitHub package registry.
          githubToken: ${{ github.token }}

          run: |
            apt-get update -y
            apt-get install -y git gcc clang make autoconf automake libtool pkg-config flex bison libxml2-dev check python3
            git config --global --add safe.directory '*'
            git submodule update --init --recursive --remote
            ./autogen.sh
            ./configure CFLAGS=-I/usr/include/tirpc LIBS=-ltirpc CC=${{matrix.cc}} --without-perftest
            make check

